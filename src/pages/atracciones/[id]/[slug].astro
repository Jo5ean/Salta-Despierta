---
export const prerender = true;
import Layout from "@/layouts/Layout.astro";
import Calendar from "../sections/Calendar.astro";
import { adventures } from "@/data/adventure";
import { formatName } from "@/utils/helpers";
import ContactSidebar from "@/pages/sections/ContactSidebar.astro";

export function getStaticPaths() {
  return adventures.map((adventure) => ({
    params: {
      id: adventure.id.toString(),
      slug: formatName(adventure.title),
    },
    props: { adventure },
  }));
}

const { id } = Astro.params;
const adventure = adventures.find((adv) => adv.id.toString() === id);
const fecha = null;
const horario = null;
if (!adventure) {
  return Astro.redirect("/404");
}

const horaries = adventure.date.length > 3 ? `De ${adventure.date[0]} a ${adventure.date[adventure.date.length - 1]}` : adventure.date.join(", ");
---

<Layout
  title={adventure.title}
  image={adventure.image}
  fixedHeader={false}
  messageContact=`Quisiera consultar por la aventura ${adventure.title}`
>
  <div class="bg-gray-200 w-full">
    <main class="max-w-7xl mx-auto py-6 px-4 sm:py-10 sm:px-6">
      {/* Breadcrumb */}
      <div
        class="mb-4 text-gray-600 flex flex-wrap items-center gap-2 text-sm sm:text-base"
      >
        <span>Argentina</span>
        <span class="text-gray-400">/</span>
        <span>{adventure.location}</span>
        <span class="text-gray-400">/</span>
        <span>{adventure.category}</span>
      </div>

      {/* Contenedor principal de dos columnas */}
      <div class="grid grid-cols-1 lg:grid-cols-[1fr_400px] gap-6 lg:gap-8">
        {/* Columna izquierda */}
        <div class="space-y-6 sm:space-y-8">
          {/* Carrusel */}
          <section class="relative">
            <div
              class="h-[300px] sm:h-[400px] md:h-[500px] rounded-lg overflow-hidden object-cover"
            >
              {
                adventure.gallery.map((image, index) => (
                  <img
                    src={image}
                    alt={`${adventure.title} - Imagen ${index + 1}`}
                    class="w-full h-full object-cover absolute top-0 left-0 transition-opacity duration-300"
                    data-carousel-item
                    data-active={index === 0}
                    style={`opacity: ${index === 0 ? "1" : "0"}`}
                  />
                ))
              }
            </div>
            <button
              class="absolute left-4 top-1/2 transform -translate-y-1/2 bg-gray-800/50 w-10 h-10 rounded-full hover:bg-gray-800/70 transition-colors flex items-center justify-center text-white"
              id="prevButton"
              aria-label="Imagen anterior"
            >
              &lt;
            </button>
            <button
              class="absolute right-4 top-1/2 transform -translate-y-1/2 bg-gray-800/50 w-10 h-10 rounded-full hover:bg-gray-800/70 transition-colors flex items-center justify-center text-white"
              id="nextButton"
              aria-label="Siguiente imagen"
            >
              &gt;
            </button>

            {/* Indicadores del carrusel */}
            <div
              class="absolute bottom-4 left-1/2 transform -translate-x-1/2 flex gap-2"
            >
              {
                adventure.gallery.map((_, index) => (
                  <button
                    class="w-2 h-2 rounded-full bg-white/60 hover:bg-white transition-colors"
                    data-carousel-indicator={index}
                    data-active={index === 0}
                    aria-label={`Ir a imagen ${index + 1}`}
                  />
                ))
              }
            </div>
          </section>

          {/* T√≠tulo y detalles */}
          <div class="space-y-4 sm:space-y-6">
            <h1 class="text-2xl sm:text-3xl font-bold text-gray-800">
              {adventure.title}
            </h1>
            <p class="text-gray-600">{adventure.location}</p>
            {
              adventure.allowReserve && (
                <div class="grid grid-cols-1 sm:grid-cols-2 gap-3 sm:gap-4">
                  <div class="flex items-start gap-2">
                    <span class="text-gray-700 font-medium">üßó‚Äç‚ôÄÔ∏è Actividad:</span>
                    <span class="text-gray-600">{adventure.category}</span>
                  </div>
                  <div class="flex items-start gap-2">
                    <span class="text-gray-700 font-medium">üí∞ Precio:</span>
                    <span class="text-gray-600">
                      Desde ARS {adventure.price} x Persona
                    </span>
                  </div>
                  <div class="flex items-start gap-2">
                    <span class="text-gray-700 font-medium whitespace-nowrap">üïí Horarios:</span>
                    <span class="text-gray-600">
                      {horaries}
                    </span>
                  </div>
                  <div class="flex items-start gap-2">
                    <span class="text-gray-700 font-medium">üïí Duraci√≥n:</span>
                    <span class="text-gray-600">{adventure.duration}</span>
                  </div>
                  <div class="flex items-start gap-2">
                    <span class="text-gray-700 font-medium">
                      üìä Dificultad:
                    </span>
                    <span class="text-gray-600">{adventure.difficulty}</span>
                  </div>
                </div>
              )
            }
          </div>

          {/* Secci√≥n "¬øQu√© har√°s durante la actividad?" */}
          <section class="space-y-4 pb-10">
            <h2 class="text-xl font-bold text-gray-800">
              ¬øQu√© har√°s durante la actividad?
            </h2>
            <p class="text-gray-600 leading-relaxed">{adventure.description}</p>
          </section>
        </div>

        {/* Columna derecha */}
        <div class="space-y-6">
          {/* Panel de reserva - Solo visible en desktop */}
          {
            adventure.allowReserve ? (
              <div class="bg-white rounded-lg shadow-lg p-4 sm:p-6 lg:sticky lg:top-4 hidden lg:block">
                <div class="mb-6">
                  <h3 class="text-xl font-bold text-gray-800 mb-4">
                    Elija una fecha
                  </h3>
                  <div class="bg-primary text-white font-bold p-4 rounded-lg">
                    <p>
                      Para visualizar los horarios y precios correspondientes
                    </p>
                  </div>
                  {/* Calendario */}
                  <div class="mt-4 rounded-lg p-4">
                    <Calendar
                      availableHours={adventure.date}
                      date={fecha}
                      horary={horario}
                    />
                  </div>
                </div>

                {/* Precio por persona */}
                <div class="space-y-4">
                  <h3 class="text-xl font-bold text-gray-800">
                    Precio por persona
                  </h3>
                  <div class="flex justify-between items-center">
                    <div>
                      <p class="text-gray-700">Adultos</p>
                      <p class="text-sm text-gray-500">De 11 a 65 a√±os</p>
                      <p class="text-emerald-600 font-medium">
                        ARS {adventure.price}
                      </p>
                    </div>
                    <div class="flex items-center gap-2">
                      <button
                        class="decrease-adults px-3 py-1 border rounded text-gray-700 hover:bg-gray-50"
                        disabled
                      >
                        -
                      </button>
                      <span class="adults-count text-gray-700">1</span>
                      <button class="increase-adults px-3 py-1 border rounded text-gray-700 hover:bg-gray-50">
                        +
                      </button>
                    </div>
                  </div>

                  <div class="flex justify-between items-center">
                    <div>
                      <p class="text-gray-700">Menor</p>
                      <p class="text-sm text-gray-500">De 6 a 10 a√±os</p>
                      <p class="text-emerald-600 font-medium">
                        ARS {adventure.price}
                      </p>
                    </div>
                    <div class="flex items-center gap-2">
                      <button
                        class="decrease-children px-3 py-1 border rounded text-gray-700 hover:bg-gray-50"
                        disabled
                      >
                        -
                      </button>
                      <span class="children-count text-gray-700">0</span>
                      <button class="increase-children px-3 py-1 border rounded text-gray-700 hover:bg-gray-50">
                        +
                      </button>
                    </div>
                  </div>

                  <div class="border-t pt-4 mt-4">
                    <div class="flex justify-between items-center mb-4">
                      <span class="text-gray-700">Total:</span>
                      <span class="total-price font-bold text-emerald-600">
                        ARS {adventure.price}
                      </span>
                    </div>
                    <div class="flex gap-4">
                      <button
                        id="openContactDesktop"
                        aria-label="Abrir formulario de contacto"
                        class="flex-1 px-4 py-2 border border-primary text-primary rounded-lg hover:bg-emerald-50 hover:scale-105 transition-all duration-300"
                      >
                        Preguntar
                      </button>
                      <button
                        id="openModalDesktop"
                        aria-label="Abrir formulario de reserva"
                        class="flex-1 px-4 py-2 bg-primary text-white rounded-lg hover:bg-emerald-600 hover:scale-105 transition-all duration-300"
                      >
                        Reservar
                      </button>
                    </div>
                  </div>

                  {/* M√©todos de pago */}
                  <div class="border-t pt-4">
                    <div class="grid grid-cols-2 sm:grid-cols-3 gap-3 sm:gap-4">
                      <div class="bg-white p-3 rounded-full flex items-center justify-center">
                        <img
                          src="/images/wallets/bna.png"
                          alt="Banco Naci√≥n"
                          class="h-10 w-10 sm:h-12 sm:w-12 object-contain"
                        />
                      </div>
                      <div class="bg-white p-3 rounded-full flex items-center justify-center">
                        <img
                          src="/images/wallets/lemon.png"
                          alt="Lemon"
                          class="h-10 w-10 sm:h-12 sm:w-12 object-contain"
                        />
                      </div>
                      <div class="bg-white p-3 rounded-full flex items-center justify-center">
                        <img
                          src="/images/wallets/mercadopago.png"
                          alt="Mercado Pago"
                          class="h-10 w-10 sm:h-12 sm:w-12 object-contain"
                        />
                      </div>
                      <div class="bg-white p-3 rounded-full flex items-center justify-center">
                        <img
                          src="/images/wallets/naranjax.png"
                          alt="Naranja"
                          class="h-10 w-10 sm:h-12 sm:w-12 object-contain"
                        />
                      </div>
                      <div class="bg-white p-3 rounded-full flex items-center justify-center">
                        <img
                          src="/images/wallets/ppy.png"
                          alt="Pago Par"
                          class="h-10 w-10 sm:h-12 sm:w-12 object-contain rounded-xl"
                        />
                      </div>
                      <div class="bg-white p-3 rounded-full flex items-center justify-center">
                        <img
                          src="/images/wallets/uala.png"
                          alt="Ual√°"
                          class="h-10 w-10 sm:h-12 sm:w-12 object-contain"
                        />
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            ) : (
              <ContactSidebar
                messageContact={`Quisiera consultar por la aventura ${adventure.title}`}
                isSection={false}
              />
            )
          }
        </div>
      </div>
    </main>
  </div>
</Layout>

{/* Bot√≥n flotante para m√≥viles - agregar dentro de un contenedor */}
<div class="relative lg:hidden">
  <button
    id="openSidebar"
    aria-label="Abrir formulario de reserva"
    class="fixed bottom-6 left-6 z-40 bg-primary text-white rounded-full px-6 py-3 shadow-lg hover:bg-emerald-600 transition-all duration-300"
  >
    <span>Reservar</span>
  </button>
</div>

{/* Overlay y Sidebar - Solo visible en mobile */}
<div
  id="sidebarOverlay"
  class="fixed inset-0 bg-black/50 z-40 lg:hidden hidden"
>
</div>

<div
  id="reservationSidebar"
  class="fixed inset-y-0 right-0 w-full sm:w-[400px] bg-white transform translate-x-full transition-transform duration-300 ease-in-out lg:hidden z-50"
>
  <div class="h-full overflow-y-auto">
    {/* Bot√≥n cerrar para m√≥viles */}
    <button
      id="closeSidebarReserva"
      aria-label="Cerrar formulario de reserva"
      class="absolute top-4 right-10 lg:hidden text-gray-500 hover:text-gray-700"
    >
      ‚úï
    </button>

    {/* Panel de reserva - contenido existente */}
    <div class="bg-white p-4 sm:p-6 h-full">
      <div class="mb-6">
        <h3 class="text-xl font-bold text-gray-800 mb-4">Elija una fecha</h3>
        <div class="bg-primary text-white font-bold p-4 rounded-lg">
          <p>Para visualizar los horarios y precios correspondientes</p>
        </div>
        {/* Calendario */}
        <div class="mt-4 rounded-lg p-4">
          <Calendar availableHours={adventure.date} />
        </div>
      </div>

      {/* Precio por persona */}
      <div class="space-y-4">
        <h3 class="text-xl font-bold text-gray-800">Precio por persona</h3>
        <div class="flex justify-between items-center">
          <div>
            <p class="text-gray-700">Adultos</p>
            <p class="text-sm text-gray-500">De 11 a 65 a√±os</p>
            <p class="text-emerald-600 font-medium">ARS {adventure.price}</p>
          </div>
          <div class="flex items-center gap-2">
            <button
              class="decrease-adults px-3 py-1 border rounded text-gray-700 hover:bg-gray-50"
              disabled>-</button
            >
            <span class="adults-count text-gray-700">1</span>
            <button
              class="increase-adults px-3 py-1 border rounded text-gray-700 hover:bg-gray-50"
              >+</button
            >
          </div>
        </div>

        <div class="flex justify-between items-center">
          <div>
            <p class="text-gray-700">Menor</p>
            <p class="text-sm text-gray-500">De 6 a 10 a√±os</p>
            <p class="text-emerald-600 font-medium">ARS {adventure.price}</p>
          </div>
          <div class="flex items-center gap-2">
            <button
              class="decrease-children px-3 py-1 border rounded text-gray-700 hover:bg-gray-50"
              disabled>-</button
            >
            <span class="children-count text-gray-700">0</span>
            <button
              class="increase-children px-3 py-1 border rounded text-gray-700 hover:bg-gray-50"
              >+</button
            >
          </div>
        </div>

        <div class="border-t pt-4 mt-4">
          <div class="flex justify-between items-center mb-4">
            <span class="text-gray-700">Total:</span>
            <span class="total-price font-bold text-emerald-600"
              >ARS {adventure.price}</span
            >
          </div>
          <div class="flex gap-4">
            <button
              id="openContact"
              aria-label="Abrir formulario de contacto"
              class="flex-1 px-4 py-2 border border-primary text-primary rounded-lg hover:bg-emerald-50 hover:scale-105 transition-all duration-300"
            >
              Preguntar
            </button>
            <button
              id="openModal"
              aria-label="Abrir formulario de reserva"
              class="flex-1 px-4 py-2 bg-primary text-white rounded-lg hover:bg-emerald-600 hover:scale-105 transition-all duration-300"
            >
              Reservar
            </button>
          </div>
        </div>

        {/* M√©todos de pago */}
        <div class="border-t pt-4">
          <div class="grid grid-cols-2 sm:grid-cols-3 gap-3 sm:gap-4">
            <div
              class="bg-white p-3 rounded-full flex items-center justify-center"
            >
              <img
                src="/images/wallets/bna.png"
                alt="Banco Naci√≥n"
                class="h-10 w-10 sm:h-12 sm:w-12 object-contain"
              />
            </div>
            <div
              class="bg-white p-3 rounded-full flex items-center justify-center"
            >
              <img
                src="/images/wallets/lemon.png"
                alt="Lemon"
                class="h-10 w-10 sm:h-12 sm:w-12 object-contain"
              />
            </div>
            <div
              class="bg-white p-3 rounded-full flex items-center justify-center"
            >
              <img
                src="/images/wallets/mercadopago.png"
                alt="Mercado Pago"
                class="h-10 w-10 sm:h-12 sm:w-12 object-contain"
              />
            </div>
            <div
              class="bg-white p-3 rounded-full flex items-center justify-center"
            >
              <img
                src="/images/wallets/naranjax.png"
                alt="Naranja"
                class="h-10 w-10 sm:h-12 sm:w-12 object-contain"
              />
            </div>
            <div
              class="bg-white p-3 rounded-full flex items-center justify-center"
            >
              <img
                src="/images/wallets/ppy.png"
                alt="Pago Par"
                class="h-10 w-10 sm:h-12 sm:w-12 object-contain rounded-xl"
              />
            </div>
            <div
              class="bg-white p-3 rounded-full flex items-center justify-center"
            >
              <img
                src="/images/wallets/uala.png"
                alt="Ual√°"
                class="h-10 w-10 sm:h-12 sm:w-12 object-contain"
              />
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

{/* Modal */}
<div
  id="modal"
  class="fixed inset-0 flex items-center justify-center bg-black bg-opacity-70 z-50 hidden"
>
  <div
    class="bg-white rounded-lg shadow-lg p-8 w-11/12 max-w-2xl transition-transform transform scale-100 hover:scale-105 text-primary/60"
  >
    <h2 class="text-2xl font-bold mb-4 text-center text-primary">
      Formulario de Reserva
    </h2>
    {/* Informaci√≥n de la aventura */}
    <div class="mb-6 p-4 border-l-4 border-primary bg-gray-100">
      <h3 class="text-lg font-semibold">Aventura: {adventure.title}</h3>
      <p id="fecha_container">Fecha:</p>
      <p id="horario_container">Horario:</p>
      <p id="adultos_container" class="font-medium">Cantidad de Adultos:</p>
      <p id="menores_container" class="font-medium">Cantidad de Menores:</p>
      <p class="font-bold text-lg" id="total_container">Precio Total: ARS</p>
    </div>
    <form class="space-y-4">
      <div>
        <label class="block text-gray-700 font-medium" for="name">Nombre</label>
        <input
          type="text"
          id="name"
          name="name"
          required
          class="w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary transition duration-200"
          placeholder="Ingresa tu nombre"
        />
      </div>
      <div>
        <label class="block text-gray-700 font-medium" for="email"
          >Correo Electr√≥nico</label
        >
        <input
          type="email"
          id="email"
          name="email"
          required
          class="w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary transition duration-200"
          placeholder="Ingresa tu correo electr√≥nico"
        />
      </div>
      <div>
        <label class="block text-gray-700 font-medium" for="message"
          >Mensaje</label
        >
        <textarea
          id="message"
          name="message"
          required
          class="w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary transition duration-200"
          rows="4"
          placeholder="Escribe tu mensaje aqu√≠"></textarea>
      </div>
      <div class="w-full flex flex-row gap-x-5 pt-4">
        <button
          type="submit"
          class="w-full px-6 py-3 bg-primary text-white rounded-lg hover:bg-primary/90 transition-all duration-300"
        >
          Enviar
        </button>
        <button
          type="button"
          id="closeModal"
          aria-label="Cerrar formulario de reserva"
          class="w-full px-6 py-3 bg-white text-primary border border-primary rounded-lg hover:bg-gray-100 transition-all duration-300"
        >
          Cerrar
        </button>
      </div>
    </form>
  </div>
</div>
<script>
  // Script para el funcionamiento del carrusel
  const items = document.querySelectorAll("[data-carousel-item]");
  const indicators = document.querySelectorAll("[data-carousel-indicator]");
  const prevButton = document.getElementById("prevButton");
  const nextButton = document.getElementById("nextButton");
  let currentIndex = 0;

  function showImage(index: number) {
    // Ocultar todas las im√°genes
    items.forEach((item) => {
      item.setAttribute("style", "opacity: 0");
      item.setAttribute("data-active", "false");
    });

    // Actualizar indicadores
    indicators.forEach((indicator) => {
      indicator.setAttribute("data-active", "false");
      indicator.classList.remove("bg-white");
      indicator.classList.add("bg-white/60");
    });

    // Mostrar la imagen seleccionada
    items[index].setAttribute("style", "opacity: 1");
    items[index].setAttribute("data-active", "true");

    // Actualizar indicador activo
    indicators[index].setAttribute("data-active", "true");
    indicators[index].classList.remove("bg-white/60");
    indicators[index].classList.add("bg-white");

    currentIndex = index;
  }

  // Event listeners para los botones
  prevButton?.addEventListener("click", () => {
    const newIndex = currentIndex === 0 ? items.length - 1 : currentIndex - 1;
    showImage(newIndex);
  });

  nextButton?.addEventListener("click", () => {
    const newIndex = currentIndex === items.length - 1 ? 0 : currentIndex + 1;
    showImage(newIndex);
  });

  // Event listeners para los indicadores
  indicators.forEach((indicator, index) => {
    indicator.addEventListener("click", () => {
      showImage(index);
    });
  });

  // Autoplay (opcional)
  setInterval(() => {
    const newIndex = currentIndex === items.length - 1 ? 0 : currentIndex + 1;
    showImage(newIndex);
  }, 5000);
</script>

<script define:vars={{ adventure }}>
  const { price } = adventure;
  let adults = 1;
  let children = 0;
  let totalS = 0;
  const MAX_PARTICIPANTS = 10;

  // Elementos del DOM
  const adultsCountElements = document.querySelectorAll(".adults-count");
  const childrenCountElements = document.querySelectorAll(".children-count");
  const totalPriceElements = document.querySelectorAll(".total-price");
  const decreaseAdultsButtons = document.querySelectorAll(".decrease-adults");
  const increaseAdultsButtons = document.querySelectorAll(".increase-adults");
  const decreaseChildrenButtons =
    document.querySelectorAll(".decrease-children");
  const increaseChildrenButtons =
    document.querySelectorAll(".increase-children");

  function updateTotal() {
    const total = (adults + children) * price;
    totalS = total;
    totalPriceElements.forEach((element) => {
      element.textContent = `ARS ${total.toLocaleString()}`; //suma el total
    });
  }

  function updateCounters() {
    //contador de adultos y menores
    adultsCountElements.forEach((element) => {
      element.textContent = adults.toString();
    });
    childrenCountElements.forEach((element) => {
      element.textContent = children.toString();
    });
  }

  function updateButtonStates() {
    //estados de botones
    const totalParticipants = adults + children;

    decreaseAdultsButtons.forEach((button) => {
      button.disabled = adults <= 1;
      if (button.disabled) {
        button.classList.add("opacity-50", "cursor-not-allowed");
      } else {
        button.classList.remove("opacity-50", "cursor-not-allowed");
      }
    });

    increaseAdultsButtons.forEach((button) => {
      button.disabled = totalParticipants >= MAX_PARTICIPANTS;
      if (button.disabled) {
        button.classList.add("opacity-50", "cursor-not-allowed");
      } else {
        button.classList.remove("opacity-50", "cursor-not-allowed");
      }
    });

    decreaseChildrenButtons.forEach((button) => {
      button.disabled = children <= 0;
      if (button.disabled) {
        button.classList.add("opacity-50", "cursor-not-allowed");
      } else {
        button.classList.remove("opacity-50", "cursor-not-allowed");
      }
    });

    increaseChildrenButtons.forEach((button) => {
      button.disabled = totalParticipants >= MAX_PARTICIPANTS;
      if (button.disabled) {
        button.classList.add("opacity-50", "cursor-not-allowed");
      } else {
        button.classList.remove("opacity-50", "cursor-not-allowed");
      }
    });
  }

  // Event Listeners
  increaseAdultsButtons.forEach((button) => {
    button.addEventListener("click", () => {
      if (adults + children < MAX_PARTICIPANTS) {
        adults++;
        updateCounters();
        updateTotal();
        updateButtonStates();
      }
    });
  });

  decreaseAdultsButtons.forEach((button) => {
    button.addEventListener("click", () => {
      if (adults > 1) {
        adults--;
        updateCounters();
        updateTotal();
        updateButtonStates();
      }
    });
  });

  increaseChildrenButtons.forEach((button) => {
    button.addEventListener("click", () => {
      if (adults + children < MAX_PARTICIPANTS) {
        children++;
        updateCounters();
        updateTotal();
        updateButtonStates();
      }
    });
  });

  decreaseChildrenButtons.forEach((button) => {
    button.addEventListener("click", () => {
      if (children > 0) {
        children--;
        updateCounters();
        updateTotal();
        updateButtonStates();
      }
    });
  });

  // Inicializar estados
  updateButtonStates();
  updateTotal();

  // Obtener elementos del DOM
  const openModalButton = document.getElementById("openModal");
  const openContact = document.getElementById("openContact");
  const openContactDesktop = document.getElementById("openContactDesktop");
  const openModalDesktop = document.getElementById("openModalDesktop");

  const modal = document.getElementById("modal");
  const closeModalButton = document.getElementById("closeModal");

  // Funci√≥n para cerrar el modal
  closeModalButton.addEventListener("click", () => {
    modal.classList.add("hidden");
  });

  // Cerrar el modal al hacer clic fuera de √©l
  window.addEventListener("click", (event) => {
    if (event.target === modal) {
      modal.classList.add("hidden");
    }
  });
  const date = document.getElementById("date");
  const horary = document.getElementById("horary");
  if (!date) throw new Error("No se ha encontrado el elemento 'date'");
  if (!horary) throw new Error("No se ha encontrado el elemento 'horary'");

  const contactSidebar = document.getElementById("contactSidebar");
  const sidebarOverlay = document.getElementById("sidebarOverlay");
  const mobileMenu = document.getElementById("mobileMenu");

  const openSideBarContact = () => {
    contactSidebar?.classList.remove("translate-x-full");
    sidebarOverlay?.classList.remove("opacity-0", "pointer-events-none");
    document.body.style.overflow = "hidden";
    // Si estamos en m√≥vil, cerrar el men√∫ m√≥vil tambi√©n
    mobileMenu?.classList.add("hidden");
    mobileMenu?.classList.remove("menu-enter");
  };

  const openModal = () => {
    if (date.value === "") return alert("Debes seleccionar una fecha");
    if (horary.value === "") return alert("Debes seleccionar un horario");
    if (adults < 1) return alert("Debes seleccionar al menos 1 adulto");

    const fechaContainer = document.getElementById("fecha_container");
    const horarioContainer = document.getElementById("horario_container");
    const adultosContainer = document.getElementById("adultos_container");
    const menoresContainer = document.getElementById("menores_container");
    const totalContainer = document.getElementById("total_container");
    fechaContainer.textContent = `Fecha: ${date.value}`;
    horarioContainer.textContent = `Horario: ${horary.value}`;
    adultosContainer.textContent = `Cantidad de Adultos: ${adults}`;
    menoresContainer.textContent = `Cantidad de Menores: ${children}`;
    totalContainer.textContent = `Precio Total: $${totalS} ARS`;

    modal.classList.remove("hidden");
  };

  openContact.addEventListener("click", openSideBarContact);
  openContactDesktop.addEventListener("click", openSideBarContact);

  openModalButton.addEventListener("click", openModal);
  openModalDesktop.addEventListener("click", openModal);
</script>

<script is:inline>
  // Funcionalidad del sidebar
  const sidebar = document.getElementById("reservationSidebar");
  const overlay = document.getElementById("sidebarOverlay");
  const openButton = document.getElementById("openSidebar");
  const closeButton = document.getElementById("closeSidebarReserva");
  function openSidebarReserva() {
    sidebar?.classList.remove("translate-x-full");
    overlay?.classList.remove("hidden");
    document.body.style.overflow = "hidden";
  }

  function closeSidebar() {
    sidebar?.classList.add("translate-x-full");
    overlay?.classList.add("hidden");
    document.body.style.overflow = "";
  }

  openButton?.addEventListener("click", openSidebarReserva);
  closeButton?.addEventListener("click", closeSidebar);
  overlay?.addEventListener("click", closeSidebar);

  window.addEventListener("resize", () => {
    if (window.innerWidth >= 1024) {
      closeSidebar();
    }
  });
</script>

<script>
  const reserveButton = document.getElementById("openSidebar");
  const footer = document.querySelector("footer");

  if (reserveButton && footer) {
    const observer = new IntersectionObserver(
      ([entry]) => {
        // Calculamos la altura del footer
        const footerHeight = footer.offsetHeight;
        
        if (entry.isIntersecting) {
          // Cuando el footer es visible, posicionamos el bot√≥n justo encima
          reserveButton.style.position = "absolute";
          reserveButton.style.bottom = `${footerHeight + 24}px`; // A√±adimos margen
          reserveButton.style.left = "50%";
          reserveButton.style.transform = "translateX(-50%)";
        } else {
          // Cuando el footer no es visible, mantenemos el bot√≥n fijo en la parte inferior
          reserveButton.style.position = "fixed";
          reserveButton.style.bottom = "24px";
          reserveButton.style.left = "24px";
          reserveButton.style.transform = "none";
        }
      },
      { 
        threshold: 0.1,
        rootMargin: "-100px 0px 0px 0px" // Ajustamos el margen para detectar el footer antes
      }
    );

    observer.observe(footer);
  }
</script>

<style>
  [data-carousel-item] {
    transition: opacity 300ms ease-in-out;
  }

  body.sidebar-open {
    overflow: hidden;
  }
  #reservationSidebar {
    overscroll-behavior: contain;
  }
</style>
