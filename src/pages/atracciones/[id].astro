---
import Layout from '@/layouts/Layout.astro';
import Calendar from './sections/Calendar.astro';
import { adventures } from "@/data/adventure";

export function getStaticPaths() {
  return adventures.map(adventure => ({
    params: { id: adventure.id.toString() },
    props: { adventure }
  }));
}

const { id } = Astro.params;
const adventure = adventures.find(adv => adv.id.toString() === id);

if (!adventure) {
  return Astro.redirect('/404');
}
---

<Layout title={adventure.title} fixedHeader={false}>
  <div class="bg-gray-200 w-full ">
    <main class="max-w-7xl mx-auto py-10">
      {/* Breadcrumb */}
      <div class="mb-4 text-gray-600 flex items-center gap-2">
      <span>Argentina</span>
      <span class="text-gray-400">/</span>
      <span>{adventure.location}</span>
      <span class="text-gray-400">/</span>
      <span>{adventure.category}</span>
    </div>

    {/* Contenedor principal de dos columnas */}
    <div class="grid grid-cols-[1fr_400px] gap-8">
      {/* Columna izquierda */}
      <div class="space-y-8">
        {/* Carrusel */}
        <section class="relative">
          <div class="h-[500px] rounded-lg overflow-hidden">
            {adventure.gallery.map((image, index) => (
              <img 
                src={image} 
                alt={`${adventure.title} - Imagen ${index + 1}`}
                class="w-full h-full object-cover absolute top-0 left-0 transition-opacity duration-300"
                data-carousel-item
                data-active={index === 0}
                style={`opacity: ${index === 0 ? '1' : '0'}`}
              />
            ))}
          </div>
          <button 
            class="absolute left-4 top-1/2 transform -translate-y-1/2 bg-gray-800/50 w-10 h-10 rounded-full hover:bg-gray-800/70 transition-colors flex items-center justify-center text-white"
            id="prevButton"
            aria-label="Imagen anterior"
          >
            &lt;
          </button>
          <button 
            class="absolute right-4 top-1/2 transform -translate-y-1/2 bg-gray-800/50 w-10 h-10 rounded-full hover:bg-gray-800/70 transition-colors flex items-center justify-center text-white"
            id="nextButton"
            aria-label="Siguiente imagen"
          >
            &gt;
          </button>

          {/* Indicadores del carrusel */}
          <div class="absolute bottom-4 left-1/2 transform -translate-x-1/2 flex gap-2">
            {adventure.gallery.map((_, index) => (
              <button
                class="w-2 h-2 rounded-full bg-white/60 hover:bg-white transition-colors"
                data-carousel-indicator={index}
                data-active={index === 0}
                aria-label={`Ir a imagen ${index + 1}`}
              />
            ))}
          </div>
        </section>

        {/* Título y detalles */}
        <div class="space-y-6">
          <h1 class="text-3xl font-bold text-gray-800">{adventure.title}</h1>
          <p class="text-gray-600">{adventure.location}</p>

          {/* Grid de características */}
          <div class="grid grid-cols-2 gap-4">
            <div class="flex items-center gap-2">
              <span class="text-gray-700 font-medium">🎯 Actividad:</span>
              <span class="text-gray-600">{adventure.category}</span>
            </div>
            <div class="flex items-center gap-2">
              <span class="text-gray-700 font-medium">⭐ Calificación:</span>
              <span class="text-gray-600">No posee</span>
            </div>
            <div class="flex items-center gap-2">
              <span class="text-gray-700 font-medium">📅 Disponible:</span>
              <span class="text-gray-600">todo el año</span>
            </div>
            <div class="flex items-center gap-2">
              <span class="text-gray-700 font-medium">💰 Precio:</span>
              <span class="text-gray-600">Desde ARS {adventure.price} x Persona</span>
            </div>
            <div class="flex items-center gap-2">
              <span class="text-gray-700 font-medium">🕒 Horarios:</span>
              <span class="text-gray-600">{adventure.date.join(", ")}</span>
            </div>
            <div class="flex items-center gap-2">
              <span class="text-gray-700 font-medium">📢 Idioma:</span>
              <span class="text-gray-600">Español</span>
            </div>
            <div class="flex items-center gap-2">
              <span class="text-gray-700 font-medium">🕒 Duración:</span>
              <span class="text-gray-600">{adventure.duration}</span>
            </div>
            <div class="flex items-center gap-2">
              <span class="text-gray-700 font-medium">📊 Dificultad:</span>
              <span class="text-gray-600">{adventure.difficulty}</span>
            </div>
            <div class="flex items-center gap-2">
              <span class="text-gray-700 font-medium">🕒 Traslados:</span>
              <span class="text-gray-600">NO ofrece</span>
            </div>
            <div class="flex items-center gap-2">
              <span class="text-gray-700 font-medium">🔄 Tipo de cancelación:</span>
              <span class="text-gray-600">Flexible</span>
            </div>
            <div class="flex items-center gap-2">
              <span class="text-gray-700 font-medium">👶 No apto menores de:</span>
              <span class="text-gray-600">5 años</span>
            </div>
            <div class="flex items-center gap-2">
              <span class="text-gray-700 font-medium">👥 Mínimo de participantes:</span>
              <span class="text-gray-600">1</span>
            </div>
          </div>
        </div>

        {/* Sección "¿Qué harás durante la actividad?" */}
        <section class="space-y-4">
          <h2 class="text-xl font-bold text-gray-800">¿Qué harás durante la actividad?</h2>
          <p class="text-gray-600 leading-relaxed">{adventure.description}</p>
        </section>
      </div>

      {/* Columna derecha */}
      <div class="space-y-6">
        {/* Panel de reserva */}
        <div class="bg-white rounded-lg shadow-lg p-6 sticky top-4">
          <div class="mb-6">
            <h3 class="text-xl font-bold text-gray-800 mb-4">Elija una fecha</h3>
            <div class="bg-primary text-white p-4 rounded-lg">
              <p>para visualizar los horarios y precios correspondientes</p>
            </div>
            {/* Calendario */}
            <div class="mt-4 rounded-lg p-4">
              <Calendar availableHours={adventure.date} />
            </div>
          </div>

          {/* Precio por persona */}
          <div class="space-y-4">
            <h3 class="text-xl font-bold text-gray-800">Precio por persona</h3>
            <div class="flex justify-between items-center">
              <div>
                <p class="text-gray-700">Adultos</p>
                <p class="text-sm text-gray-500">De 11 a 65 años</p>
                <p class="text-emerald-600 font-medium">ARS {adventure.price}</p>
              </div>
              <div class="flex items-center gap-2">
                <button 
                  class="px-3 py-1 border rounded text-gray-700 hover:bg-gray-50" 
                  id="decreaseAdults"
                  disabled
                >-</button>
                <span class="text-gray-700" id="adultsCount">1</span>
                <button 
                  class="px-3 py-1 border rounded text-gray-700 hover:bg-gray-50" 
                  id="increaseAdults"
                >+</button>
              </div>
            </div>

            <div class="flex justify-between items-center">
              <div>
                <p class="text-gray-700">Menor</p>
                <p class="text-sm text-gray-500">De 6 a 10 años</p>
                <p class="text-emerald-600 font-medium">ARS {adventure.price}</p>
              </div>
              <div class="flex items-center gap-2">
                <button 
                  class="px-3 py-1 border rounded text-gray-700 hover:bg-gray-50" 
                  id="decreaseChildren"
                  disabled
                >-</button>
                <span class="text-gray-700" id="childrenCount">0</span>
                <button 
                  class="px-3 py-1 border rounded text-gray-700 hover:bg-gray-50" 
                  id="increaseChildren"
                >+</button>
              </div>
            </div>

            <div class="border-t pt-4 mt-4">
              <div class="flex justify-between items-center mb-4">
                <span class="text-gray-700">Total:</span>
                <span class="font-bold text-emerald-600" id="totalPrice">ARS {adventure.price}</span>
              </div>
              <div class="flex gap-4">
                <button class="flex-1 px-4 py-2 border border-primary text-primary rounded-lg hover:bg-emerald-50 hover:scale-105 transition-all duration-300">
                  Preguntar
                </button>
                <button class="flex-1 px-4 py-2 bg-primary text-white rounded-lg hover:bg-emerald-600 hover:scale-105 transition-all duration-300">
                  Reservar
                </button>
              </div>
            </div>

            {/* Métodos de pago */}
            <div class="border-t pt-4">
              <div class="grid grid-cols-3 gap-4">
                <div class="bg-white p-3 rounded-full flex items-center justify-center">
                  <img src="/images/wallets/bna.png" alt="Banco Nación" class="h-14 w-14 object-contain"/>
                </div>
                <div class="bg-white p-3 rounded-full flex items-center justify-center">
                  <img src="/images/wallets/lemon.png" alt="Lemon" class="h-12 w-12 object-contain"/>
                </div>
                <div class="bg-white p-3 rounded-full flex items-center justify-center">
                  <img src="/images/wallets/mercadopago.png" alt="Mercado Pago" class="h-12 w-12 object-contain"/>
                </div>
                <div class="bg-white p-3 rounded-full flex items-center justify-center">
                  <img src="/images/wallets/naranjax.png" alt="Naranja" class="h-12 w-12 object-contain"/>
                </div>
                <div class="bg-white p-3 rounded-full flex items-center justify-center">
                  <img src="/images/wallets/ppy.png" alt="Pago Par" class="h-12 w-12 object-contain rounded-xl"/>
                </div>
                <div class="bg-white p-3 rounded-full flex items-center justify-center">
                  <img src="/images/wallets/uala.png" alt="Ualá" class="h-12 w-12 object-contain"/>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </main>
  </div>
</Layout>

<script>
  // Script para el funcionamiento del carrusel
  const items = document.querySelectorAll('[data-carousel-item]');
  const indicators = document.querySelectorAll('[data-carousel-indicator]');
  const prevButton = document.getElementById('prevButton');
  const nextButton = document.getElementById('nextButton');
  let currentIndex = 0;

  function showImage(index: number) {
    // Ocultar todas las imágenes
    items.forEach((item) => {
      item.setAttribute('style', 'opacity: 0');
      item.setAttribute('data-active', 'false');
    });
    
    // Actualizar indicadores
    indicators.forEach((indicator) => {
      indicator.setAttribute('data-active', 'false');
      indicator.classList.remove('bg-white');
      indicator.classList.add('bg-white/60');
    });

    // Mostrar la imagen seleccionada
    items[index].setAttribute('style', 'opacity: 1');
    items[index].setAttribute('data-active', 'true');
    
    // Actualizar indicador activo
    indicators[index].setAttribute('data-active', 'true');
    indicators[index].classList.remove('bg-white/60');
    indicators[index].classList.add('bg-white');
    
    currentIndex = index;
  }

  // Event listeners para los botones
  prevButton?.addEventListener('click', () => {
    const newIndex = currentIndex === 0 ? items.length - 1 : currentIndex - 1;
    showImage(newIndex);
  });

  nextButton?.addEventListener('click', () => {
    const newIndex = currentIndex === items.length - 1 ? 0 : currentIndex + 1;
    showImage(newIndex);
  });

  // Event listeners para los indicadores
  indicators.forEach((indicator, index) => {
    indicator.addEventListener('click', () => {
      showImage(index);
    });
  });

  // Autoplay (opcional)
  setInterval(() => {
    const newIndex = currentIndex === items.length - 1 ? 0 : currentIndex + 1;
    showImage(newIndex);
  }, 5000);
</script>

<script define:vars={{ price: adventure.price }}>
  let adults = 1;
  let children = 0;
  const MAX_PARTICIPANTS = 10;

  // Elementos del DOM
  const adultsCount = document.getElementById('adultsCount');
  const childrenCount = document.getElementById('childrenCount');
  const totalPrice = document.getElementById('totalPrice');
  const decreaseAdults = document.getElementById('decreaseAdults');
  const increaseAdults = document.getElementById('increaseAdults');
  const decreaseChildren = document.getElementById('decreaseChildren');
  const increaseChildren = document.getElementById('increaseChildren');

  // Función para actualizar el total
  function updateTotal() {
    const total = (adults + children) * price;
    totalPrice.textContent = `ARS ${total.toLocaleString()}`;
  }

  // Función para actualizar estados de botones
  function updateButtonStates() {
    const totalParticipants = adults + children;
    
    decreaseAdults.disabled = adults <= 1;
    increaseAdults.disabled = totalParticipants >= MAX_PARTICIPANTS;
    decreaseChildren.disabled = children <= 0;
    increaseChildren.disabled = totalParticipants >= MAX_PARTICIPANTS;

    // Aplicar estilos visuales para botones deshabilitados
    [decreaseAdults, increaseAdults, decreaseChildren, increaseChildren].forEach(button => {
      if (button.disabled) {
        button.classList.add('opacity-50', 'cursor-not-allowed');
      } else {
        button.classList.remove('opacity-50', 'cursor-not-allowed');
      }
    });
  }

  // Event Listeners
  increaseAdults?.addEventListener('click', () => {
    if (adults + children < MAX_PARTICIPANTS) {
      adults++;
      adultsCount.textContent = adults;
      updateTotal();
      updateButtonStates();
    }
  });

  decreaseAdults?.addEventListener('click', () => {
    if (adults > 1) {
      adults--;
      adultsCount.textContent = adults;
      updateTotal();
      updateButtonStates();
    }
  });

  increaseChildren?.addEventListener('click', () => {
    if (adults + children < MAX_PARTICIPANTS) {
      children++;
      childrenCount.textContent = children;
      updateTotal();
      updateButtonStates();
    }
  });

  decreaseChildren?.addEventListener('click', () => {
    if (children > 0) {
      children--;
      childrenCount.textContent = children;
      updateTotal();
      updateButtonStates();
    }
  });

  // Inicializar estados
  updateButtonStates();
  updateTotal();
</script>

<style>
  [data-carousel-item] {
    transition: opacity 300ms ease-in-out;
  }

  body {
    @apply bg-gray-50;
  }
</style>
