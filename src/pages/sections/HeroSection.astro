---
import { adventures } from "@/data/adventure";
import { formatName } from "@/utils/helpers";
---

<div
  class="relative h-screen w-full overflow-hidden"
  id="hero-carousel"
  aria-live="polite"
>
  {
    adventures.map((project, index) => (
      <div
        class={`absolute inset-0 transition-opacity duration-1000 ${index === 0 ? "opacity-100" : "opacity-0"}`}
        data-carousel-item
      >
        <img
          src={project.image}
          alt={project.title}
          class="h-full w-full object-cover"
        />
        <div class="absolute inset-0 bg-black bg-opacity-60" />

        <div class="container mx-auto px-4 sm:px-6 md:px-24 lg:px-24 2xl:px-4">
          <div class="absolute top-1/2 transform -translate-y-1/2 text-white">
            <div class="font-body text-xl md:text-2xl mb-2 sm:mb-3 md:mb-4">
              {index + 1}/{adventures.length}
            </div>
            <h1 class="font-titles tracking-titles text-6xl sm:text-6xl md:text-7xl lg:text-8xl xl:text-9xl mb-2 sm:mb-3 md:mb-4 flex flex-col items-start">
              <span>{project.category}</span>
            </h1>
            <div
              class="fade-in-line h-1 sm:h-1.5 w-16 sm:w-20 mt-3 sm:mt-4 opacity-0 mb-5"
              style={`transition: opacity 1s ease-in-out;`}
            />
            <p class="text-2xl md:text-xl">
              {project.category} | {project.location}
            </p>
            <div
              class="fade-in-line h-1 sm:h-1.5 w-16 sm:w-20 mt-3 sm:mt-4 opacity-0 mb-5"
              style={`transition: opacity 1s ease-in-out;`}
            />
            <a
              class="px-6 py-3 bg-transparent border border-primary text-primary rounded-lg"
              href={`/atracciones/${project.id}/${formatName(project.title)}`}
            >
              Más Información
            </a>
          </div>
        </div>
      </div>
    ))
  }

  <!-- Previous Slide Button -->
  <button
    id="prev-slide"
    class="absolute text-white hover:text-gray-300 transition-all duration-400 flex items-center justify-center p-4 border-[1px] border-white hover:bg-white hover:bg-opacity-10 backdrop-blur-lg rounded-full bottom-5 left-5 sm:bottom-auto sm:top-1/2 sm:-translate-y-1/2"
    tabindex="0"
  >
    <svg
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M15 19L8 12L15 5"
        stroke="currentColor"
        stroke-width="2"
        stroke-linecap="round"
        stroke-linejoin="round"></path>
    </svg>
    <span class="sr-only">Previous</span>
  </button>

  <!-- Next Slide Button -->
  <button
    id="next-slide"
    class="absolute text-white hover:text-gray-300 transition-all duration-400 flex items-center justify-center p-4 border-[1px] border-white hover:bg-white hover:bg-opacity-10 backdrop-blur-lg rounded-full bottom-5 right-5 sm:bottom-auto sm:top-1/2 sm:-translate-y-1/2"
    tabindex="0"
  >
    <svg
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M9 5L16 12L9 19"
        stroke="currentColor"
        stroke-width="2"
        stroke-linecap="round"
        stroke-linejoin="round"></path>
    </svg>
    <span class="sr-only">Next</span>
  </button>
</div>

<style is:global>
  .fade-in-line {
    opacity: 0;
    animation: slideInOut 5s ease-in-out forwards;
  }

  [data-carousel-item] {
    will-change: opacity;
  }

  @keyframes slideInOut {
    0% {
      transform: translateX(-100%);
      opacity: 0;
    }
    10% {
      transform: translateX(0);
      opacity: 1;
    }
    90% {
      transform: translateX(0);
      opacity: 1;
    }
    100% {
      transform: translateX(100%);
      opacity: 0;
    }
  }
</style>

<script is:inline>
  const carousel = document.getElementById("hero-carousel");
  const slides = carousel.querySelectorAll("[data-carousel-item]");
  const prevButton = document.getElementById("prev-slide");
  const nextButton = document.getElementById("next-slide");
  let currentSlide = 0;
  let slideInterval;

  function showSlide(index) {
    slides.forEach((slide, i) => {
      const line = slide.querySelector(".fade-in-line");
      slide.classList.toggle("opacity-100", i === index);
      slide.classList.toggle("opacity-0", i !== index);

      if (i === index) {
        line.style.animation = "none";
        void line.offsetWidth;
        line.style.animation = "slideInOut 5s ease-in-out forwards";
      } else {
        line.style.animation = "none";
      }
    });
  }

  function nextSlide() {
    currentSlide = (currentSlide + 1) % slides.length;
    showSlide(currentSlide);
  }

  function prevSlide() {
    currentSlide = (currentSlide - 1 + slides.length) % slides.length;
    showSlide(currentSlide);
  }

  function resetInterval() {
    clearInterval(slideInterval);
    slideInterval = setInterval(nextSlide, 5000);
  }

  slideInterval = setInterval(nextSlide, 5000);

  prevButton.addEventListener("click", () => {
    prevSlide();
    resetInterval();
  });

  nextButton.addEventListener("click", () => {
    nextSlide();
    resetInterval();
  });
</script>
