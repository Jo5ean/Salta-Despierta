---
// Imports
import Footer from "../layouts/partials/Footer.astro";
import Header from "../layouts/partials/Header.astro";
import config from "../config/config";

// Props
interface Props {
	image?: string;
	title: string;
	fixedHeader?: boolean;
	messageContact?: string;
}

const { description, image: imageConfig } = config;
const {
	title,
	fixedHeader = true,
	messageContact = null,
	image = imageConfig,
} = Astro.props;

const titleD = `${title} | ${config.title}`.slice(0, 69);
const { pathname } = Astro.url;
const url = Astro.url.toString().replace("http://", "https://");
const canonicalURL = new URL(pathname, url);
---

<!doctype html>
<html lang="es" class="scroll-smooth">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/x-icon" href="/favicon.ico" />
		<meta name="generator" content={Astro.generator} />
		<title>{titleD}</title>

		<meta name="description" content={description} />
		<link rel="canonical" href={canonicalURL} />
		<meta name="author" content={config.author} />

		<meta itemprop="name" content={titleD} />
		<meta itemprop="description" content={description} />
		<meta itemprop="image" content={new URL(image, url)} />
		<meta name="keywords" content={config.keywords} />

		<!-- ðŸŽ¨ Colores institucionales -->
		<meta name="theme-color" content="#F59A2F" />
		<meta name="msapplication-TileColor" content="#F59A2F" />
		<meta name="apple-mobile-web-app-status-bar-style" content="black-translucent" />

		<meta name="viewport" content="width=device-width,initial-scale=1,shrink-to-fit=no" />
		<meta http-equiv="x-ua-compatible" content="ie=edge" />

		<!-- Redes sociales -->
		<meta name="twitter:card" content="summary_large_image" />
		<meta name="twitter:site" content={config.author} />
		<meta name="twitter:creator" content={config.author} />
		<meta name="twitter:title" content={titleD} />
		<meta name="twitter:description" content={description} />
		<meta name="twitter:image" content={new URL(image, url)} />

		<meta property="og:title" content={titleD} />
		<meta property="og:description" content={description} />
		<meta property="og:url" content={url} />
		<meta property="og:image" content={new URL(image, url)} />
		<meta property="og:site_name" content={config.site_name} />
		<meta property="og:type" content="website" />
		<meta property="og:locale" content="es_ES" />

		<meta name="robots" content="index, follow" />
		<meta name="googlebot" content="index, follow" />

		<meta name="apple-mobile-web-app-capable" content="yes" />
		<meta name="apple-mobile-web-app-title" content={config.site_name} />
		<meta name="application-name" content={config.site_name} />

		<meta name="msapplication-config" content="/browserconfig.xml" />

		<link rel="manifest" href="/manifest.webmanifest" />

		<!-- Fonts -->
		<link rel="preconnect" href="https://fonts.googleapis.com" />
		<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
		<link
			href="https://fonts.googleapis.com/css2?family=Open+Sans:ital,wght@0,300..800;1,300..800&display=swap"
			rel="stylesheet"
		/>

		<!-- Notificaciones (Notyf) -->
		<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/notyf@3/notyf.min.css" />

		<!-- AnalÃ­tica (solo en producciÃ³n) -->
		{config.IS_PRODUCTION && 
			<>
				<script type="text/javascript">
					(function(c,l,a,r,i,t,y){
						c[a]=c[a]||function(){(c[a].q=c[a].q||[]).push(arguments)};
						t=l.createElement(r);t.async=1;t.src="https://www.clarity.ms/tag/"+i;
						y=l.getElementsByTagName(r)[0];y.parentNode.insertBefore(t,y);
					})(window, document, "clarity", "script", "q6awzjbqi7");
				</script>
				<script async src="https://www.googletagmanager.com/gtag/js?id=G-M26ZZET872"></script>
				<script is:inline>
					window.dataLayer = window.dataLayer || [];
					function gtag(){dataLayer.push(arguments);}
					gtag('js', new Date());
					gtag('config', 'G-M26ZZET872');
				</script>
			</>
		}
	</head>
	<body class="bg-white text-darkGray max-w-full overflow-x-hidden font-body">
		<!-- Header -->
		<div class="z-[999] relative">
			<Header isFixed={fixedHeader} messageContact={messageContact} />
		</div>

		<!-- Espacio para compensar el header fijo -->
		{fixedHeader && <div class="h-[140px] md:h-[152px]"></div>}

		<!-- Main content -->
		<div class="relative z-[1]">
			<slot />
		</div>

		<!-- Footer -->
		<Footer isFixed={false} />
	</body>
</html>

<!-- Estilos globales -->
<style is:global>
	:root {
		font-family: "Open Sans", sans-serif;
	}

	.animate-fade-in {
		opacity: 0;
		transform: translateY(20px);
		transition: opacity 0.5s ease-out, transform 0.5s ease-out;
	}

	.animate-fade-in.visible {
		opacity: 1;
		transform: translateY(0);
	}

	.carousel {
		display: flex;
		overflow-x: auto;
		scroll-snap-type: x mandatory;
		-webkit-overflow-scrolling: touch;
	}

	.carousel-item {
		flex: 0 0 auto;
		width: 200px;
		scroll-snap-align: start;
	}

	.disabled {
		cursor: not-allowed;
		opacity: 0.5;
	}
</style>

<!-- Script para habilitar botones de contacto -->
<script>
	import { openSidebar } from "@/utils/helpers";
	const contactButton = document.getElementById("contactButton");
	const contactButtonPrev = document.getElementById("contactButtonPrev");
	const mobileContactButton = document.getElementById("mobileContactButton");

	document.addEventListener("DOMContentLoaded", () => {
		if (!contactButton || !contactButtonPrev || !mobileContactButton) return;
		[contactButton, contactButtonPrev, mobileContactButton].forEach(btn => {
			(btn as HTMLButtonElement)?.classList.remove("disabled");
			(btn as HTMLButtonElement).disabled = false;
			btn?.addEventListener("click", openSidebar);
		});
	});
</script>
